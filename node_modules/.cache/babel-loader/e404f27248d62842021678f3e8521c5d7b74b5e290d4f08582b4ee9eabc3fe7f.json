{"ast":null,"code":"// -----------------------RootReducer.js-----------------------\nimport { createReducer } from '@reduxjs/toolkit';\nconst initState = {\n  products: [],\n  cart: checkCart()\n};\nexport const root = createReducer(initState, builder => {\n  builder.addCase('product.load', (state, action) => {\n    state.products = action.payload.products;\n  }).addCase('cart.add', (state, action) => {\n    const productToAdd = action.payload.product;\n    state.cart.push(productToAdd);\n\n    // Cập nhật trạng thái của sản phẩm trong danh sách sản phẩm\n    state.products = state.products.map(p => {\n      if (p.id === productToAdd.id) {\n        return {\n          ...p,\n          isBuying: true,\n          color: 'red'\n        };\n      }\n      return p;\n    });\n    saveCart(state.cart);\n  }).addCase('cart.minus', (state, action) => {\n    const productToRemove = action.payload.product;\n    state.cart = state.cart.filter(p => p.id !== productToRemove.id);\n\n    // Cập nhật trạng thái của sản phẩm trong danh sách sản phẩm\n    state.products = state.products.map(p => {\n      if (p.id === productToRemove.id) {\n        return {\n          ...p,\n          isBuying: false,\n          color: 'blue'\n        };\n      }\n      return p;\n    });\n    saveCart(state.cart);\n  })\n  //tìm kiếm sản phẩm\n  .addCase('location.set', (state, action) => {\n    state.locationFilter = action.payload.location;\n  });\n});\nfunction checkCart() {\n  const cart = JSON.parse(localStorage.getItem('cart')) || [];\n  return cart;\n}\nfunction saveCart(cart) {\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\nexport const setLocationFilter = location => ({\n  type: 'location.set',\n  payload: {\n    location\n  }\n});\n\n// ----------------------------------------","map":{"version":3,"names":["createReducer","initState","products","cart","checkCart","root","builder","addCase","state","action","payload","productToAdd","product","push","map","p","id","isBuying","color","saveCart","productToRemove","filter","locationFilter","location","JSON","parse","localStorage","getItem","setItem","stringify","setLocationFilter","type"],"sources":["D:/tour/src/Store/RootReducer.js"],"sourcesContent":["// -----------------------RootReducer.js-----------------------\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst initState = {\r\n    products: [],\r\n    cart: checkCart(),\r\n};\r\n\r\nexport const root = createReducer(initState, (builder) => {\r\n    builder\r\n        .addCase('product.load', (state, action) => {\r\n            state.products = action.payload.products;\r\n        })\r\n        .addCase('cart.add', (state, action) => {\r\n            const productToAdd = action.payload.product;\r\n            state.cart.push(productToAdd);\r\n\r\n            // Cập nhật trạng thái của sản phẩm trong danh sách sản phẩm\r\n            state.products = state.products.map(p => {\r\n                if (p.id === productToAdd.id) {\r\n                    return { ...p, isBuying: true, color: 'red' };\r\n                }\r\n                return p;\r\n            });\r\n\r\n            saveCart(state.cart);\r\n        })\r\n        .addCase('cart.minus', (state, action) => {\r\n            const productToRemove = action.payload.product;\r\n            state.cart = state.cart.filter(p => p.id !== productToRemove.id);\r\n\r\n            // Cập nhật trạng thái của sản phẩm trong danh sách sản phẩm\r\n            state.products = state.products.map(p => {\r\n                if (p.id === productToRemove.id) {\r\n                    return { ...p, isBuying: false, color: 'blue' };\r\n                }\r\n                return p;\r\n            });\r\n\r\n            saveCart(state.cart);\r\n        })\r\n        //tìm kiếm sản phẩm\r\n        .addCase('location.set', (state, action) => {\r\n            state.locationFilter = action.payload.location;\r\n        });\r\n});\r\n\r\nfunction checkCart() {\r\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\r\n    return cart;\r\n}\r\n\r\nfunction saveCart(cart) {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n}\r\nexport const setLocationFilter = (location) => ({\r\n    type: 'location.set',\r\n    payload: { location }\r\n});\r\n\r\n\r\n// ----------------------------------------"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,MAAMC,SAAS,GAAG;EACdC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAEC,SAAS,CAAC;AACpB,CAAC;AAED,OAAO,MAAMC,IAAI,GAAGL,aAAa,CAACC,SAAS,EAAGK,OAAO,IAAK;EACtDA,OAAO,CACFC,OAAO,CAAC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxCD,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;EAC5C,CAAC,CAAC,CACDK,OAAO,CAAC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpC,MAAME,YAAY,GAAGF,MAAM,CAACC,OAAO,CAACE,OAAO;IAC3CJ,KAAK,CAACL,IAAI,CAACU,IAAI,CAACF,YAAY,CAAC;;IAE7B;IACAH,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACY,GAAG,CAACC,CAAC,IAAI;MACrC,IAAIA,CAAC,CAACC,EAAE,KAAKL,YAAY,CAACK,EAAE,EAAE;QAC1B,OAAO;UAAE,GAAGD,CAAC;UAAEE,QAAQ,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAM,CAAC;MACjD;MACA,OAAOH,CAAC;IACZ,CAAC,CAAC;IAEFI,QAAQ,CAACX,KAAK,CAACL,IAAI,CAAC;EACxB,CAAC,CAAC,CACDI,OAAO,CAAC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACtC,MAAMW,eAAe,GAAGX,MAAM,CAACC,OAAO,CAACE,OAAO;IAC9CJ,KAAK,CAACL,IAAI,GAAGK,KAAK,CAACL,IAAI,CAACkB,MAAM,CAACN,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKI,eAAe,CAACJ,EAAE,CAAC;;IAEhE;IACAR,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACY,GAAG,CAACC,CAAC,IAAI;MACrC,IAAIA,CAAC,CAACC,EAAE,KAAKI,eAAe,CAACJ,EAAE,EAAE;QAC7B,OAAO;UAAE,GAAGD,CAAC;UAAEE,QAAQ,EAAE,KAAK;UAAEC,KAAK,EAAE;QAAO,CAAC;MACnD;MACA,OAAOH,CAAC;IACZ,CAAC,CAAC;IAEFI,QAAQ,CAACX,KAAK,CAACL,IAAI,CAAC;EACxB,CAAC;EACD;EAAA,CACCI,OAAO,CAAC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxCD,KAAK,CAACc,cAAc,GAAGb,MAAM,CAACC,OAAO,CAACa,QAAQ;EAClD,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,SAASnB,SAASA,CAAA,EAAG;EACjB,MAAMD,IAAI,GAAGqB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE;EAC3D,OAAOxB,IAAI;AACf;AAEA,SAASgB,QAAQA,CAAChB,IAAI,EAAE;EACpBuB,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAAC1B,IAAI,CAAC,CAAC;AACtD;AACA,OAAO,MAAM2B,iBAAiB,GAAIP,QAAQ,KAAM;EAC5CQ,IAAI,EAAE,cAAc;EACpBrB,OAAO,EAAE;IAAEa;EAAS;AACxB,CAAC,CAAC;;AAGF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}