{"ast":null,"code":"// -----------------------RootReducer.js-----------------------\nimport { createReducer, createAction } from '@reduxjs/toolkit';\nconst initState = {\n  products: [],\n  cart: checkCart()\n};\nexport const addToCart = createAction('cart.add');\nexport const root = createReducer(initState, builder => {\n  builder.addCase('product.load', (state, action) => {\n    let products = action.payload.products;\n    let out = [];\n    let cart = checkCart();\n    lop1: for (const p of products) {\n      for (const c of cart) {\n        if (c.id === p.id) {\n          out.push({\n            ...p,\n            isBuying: true,\n            color: 'red'\n          });\n          continue lop1;\n        }\n      }\n      out.push({\n        ...p,\n        isBuying: false,\n        color: 'blue'\n      });\n    }\n    state.products = out;\n  }).addCase('cart.add', (state, action) => {\n    if (!state.cart) state = checkCart();\n    state.cart = [...state.cart, action.payload.product];\n    saveCart(state.cart);\n  }).addCase('cart.minus', (state, action) => {\n    if (!state.cart) state = checkCart();\n    let cart = state.cart.filter(product => product.id !== action.payload.product.id);\n    state.cart = [...cart];\n    saveCart(state.cart);\n  });\n});\nfunction checkCart() {\n  if (localStorage.getItem('cart')) {\n    return JSON.parse(localStorage.getItem('cart'));\n  }\n  return [];\n}\nfunction saveCart(cart) {\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n// ----------------------------------------","map":{"version":3,"names":["createReducer","createAction","initState","products","cart","checkCart","addToCart","root","builder","addCase","state","action","payload","out","lop1","p","c","id","push","isBuying","color","product","saveCart","filter","localStorage","getItem","JSON","parse","setItem","stringify"],"sources":["D:/tour/src/Store/RootReducer.js"],"sourcesContent":["// -----------------------RootReducer.js-----------------------\r\nimport { createReducer, createAction } from '@reduxjs/toolkit';\r\n\r\nconst initState = {\r\n    products: [],\r\n    cart: checkCart(),\r\n}\r\nexport const addToCart = createAction('cart.add');\r\n\r\nexport const root = createReducer(initState, (builder) => {\r\n    builder\r\n        .addCase('product.load', (state, action) => {\r\n            let products = action.payload.products;\r\n            let out = [];\r\n            let cart = checkCart();\r\n            lop1: for (const p of products) {\r\n                for (const c of cart) {\r\n                    if (c.id === p.id) {\r\n                        out.push({ ...p, isBuying: true, color: 'red' });\r\n                        continue lop1;\r\n                    }\r\n                }\r\n                out.push({ ...p, isBuying: false, color: 'blue' });\r\n            }\r\n\r\n            state.products = out;\r\n        })\r\n        .addCase('cart.add', (state, action) => {\r\n            if (!state.cart) state = checkCart();\r\n            state.cart = [...state.cart, action.payload.product];\r\n            saveCart(state.cart);\r\n        })\r\n        .addCase('cart.minus', (state, action) => {\r\n            if (!state.cart) state = checkCart();\r\n            let cart = state.cart.filter(product => product.id !== action.payload.product.id);\r\n            state.cart = [...cart];\r\n            saveCart(state.cart);\r\n        })\r\n});\r\n\r\nfunction checkCart() {\r\n    if (localStorage.getItem('cart')) {\r\n        return JSON.parse(localStorage.getItem('cart'));\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction saveCart(cart) {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n}\r\n// ----------------------------------------"],"mappings":"AAAA;AACA,SAASA,aAAa,EAAEC,YAAY,QAAQ,kBAAkB;AAE9D,MAAMC,SAAS,GAAG;EACdC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAEC,SAAS,CAAC;AACpB,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGL,YAAY,CAAC,UAAU,CAAC;AAEjD,OAAO,MAAMM,IAAI,GAAGP,aAAa,CAACE,SAAS,EAAGM,OAAO,IAAK;EACtDA,OAAO,CACFC,OAAO,CAAC,cAAc,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACxC,IAAIR,QAAQ,GAAGQ,MAAM,CAACC,OAAO,CAACT,QAAQ;IACtC,IAAIU,GAAG,GAAG,EAAE;IACZ,IAAIT,IAAI,GAAGC,SAAS,CAAC,CAAC;IACtBS,IAAI,EAAE,KAAK,MAAMC,CAAC,IAAIZ,QAAQ,EAAE;MAC5B,KAAK,MAAMa,CAAC,IAAIZ,IAAI,EAAE;QAClB,IAAIY,CAAC,CAACC,EAAE,KAAKF,CAAC,CAACE,EAAE,EAAE;UACfJ,GAAG,CAACK,IAAI,CAAC;YAAE,GAAGH,CAAC;YAAEI,QAAQ,EAAE,IAAI;YAAEC,KAAK,EAAE;UAAM,CAAC,CAAC;UAChD,SAASN,IAAI;QACjB;MACJ;MACAD,GAAG,CAACK,IAAI,CAAC;QAAE,GAAGH,CAAC;QAAEI,QAAQ,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAO,CAAC,CAAC;IACtD;IAEAV,KAAK,CAACP,QAAQ,GAAGU,GAAG;EACxB,CAAC,CAAC,CACDJ,OAAO,CAAC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACpC,IAAI,CAACD,KAAK,CAACN,IAAI,EAAEM,KAAK,GAAGL,SAAS,CAAC,CAAC;IACpCK,KAAK,CAACN,IAAI,GAAG,CAAC,GAAGM,KAAK,CAACN,IAAI,EAAEO,MAAM,CAACC,OAAO,CAACS,OAAO,CAAC;IACpDC,QAAQ,CAACZ,KAAK,CAACN,IAAI,CAAC;EACxB,CAAC,CAAC,CACDK,OAAO,CAAC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACtC,IAAI,CAACD,KAAK,CAACN,IAAI,EAAEM,KAAK,GAAGL,SAAS,CAAC,CAAC;IACpC,IAAID,IAAI,GAAGM,KAAK,CAACN,IAAI,CAACmB,MAAM,CAACF,OAAO,IAAIA,OAAO,CAACJ,EAAE,KAAKN,MAAM,CAACC,OAAO,CAACS,OAAO,CAACJ,EAAE,CAAC;IACjFP,KAAK,CAACN,IAAI,GAAG,CAAC,GAAGA,IAAI,CAAC;IACtBkB,QAAQ,CAACZ,KAAK,CAACN,IAAI,CAAC;EACxB,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,SAASC,SAASA,CAAA,EAAG;EACjB,IAAImB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;IAC9B,OAAOC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACnD;EACA,OAAO,EAAE;AACb;AAEA,SAASH,QAAQA,CAAClB,IAAI,EAAE;EACpBoB,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACzB,IAAI,CAAC,CAAC;AACtD;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}